/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/session": {
    /** Create a new session */
    post: operations["createSession"];
  };
  "/sessions/{id}": {
    /** @description Returns session information for a given session id */
    get: operations["getSession"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Session: components["schemas"]["NewSession"] & {
      /** @example a5b0def7-ea3b-4c4a-b96f-42088a303fcc */
      id: string;
    };
    NewSession: {
      /** @example https://www.youtube.com/watch?v=NX1eKLReSpY */
      videoUrl: string;
      /** @example My Watch Party */
      name?: string;
    };
    Error: {
      /**
       * Format: int32
       * @example 500
       */
      code: number;
      /** @example Internal Server Error */
      message: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Create a new session */
  createSession: {
    /** @description Session information */
    requestBody: {
      content: {
        "application/json": components["schemas"]["NewSession"];
      };
    };
    responses: {
      /** @description Successful Creation */
      201: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
    };
  };
  /** @description Returns session information for a given session id */
  getSession: {
    parameters: {
      path: {
        /** @description ID of session */
        id: string;
      };
    };
    responses: {
      /** @description Session response */
      200: {
        content: {
          "application/json": components["schemas"]["Session"];
        };
      };
      /** @description Session not found */
      404: {
        content: never;
      };
    };
  };
}
